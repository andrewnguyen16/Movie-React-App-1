{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-rmdb-v3-starter-files-master\\\\4. Finished App\\\\react-rmdb-finished-rating\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom'; // Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config'; // Components\n\nimport BreadCrumb from './BreadCrumb';\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor'; // Hook\n\nimport { useMovieFetch } from '../hooks/useMovieFetch'; // Image\n\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const {\n    state: movie,\n    loading,\n    error\n  } = useMovieFetch(movieId);\n  if (loading) return /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Something went wrong...\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadCrumb, {\n    movieTitle: movie.original_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieInfo, {\n    movie: movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MovieInfoBar, {\n    time: movie.runtime,\n    budget: movie.budget,\n    revenue: movie.revenue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    header: \"Actors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, movie.actors.map(actor => /*#__PURE__*/React.createElement(Actor, {\n    key: actor.credit_id,\n    name: actor.name,\n    character: actor.character,\n    imageUrl: actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Movie, \"MFvN9GJ3GVLfd55hOP/zB0RDH6Y=\", false, function () {\n  return [useParams, useMovieFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["F:/react-rmdb-v3-starter-files-master/4. Finished App/react-rmdb-finished-rating/src/components/Movie.js"],"names":["React","useParams","IMAGE_BASE_URL","POSTER_SIZE","BreadCrumb","Grid","Spinner","MovieInfo","MovieInfoBar","Actor","useMovieFetch","NoImage","Movie","movieId","state","movie","loading","error","original_title","runtime","budget","revenue","actors","map","actor","credit_id","name","character","profile_path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAcZ,SAAS,EAA7B;AAEA,QAAM;AAAEa,IAAAA,KAAK,EAAEC,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAmCP,aAAa,CAACG,OAAD,CAAtD;AAEA,MAAIG,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AAEX,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEF,KAAK,CAACG,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACI,OADd;AAEE,IAAA,MAAM,EAAEJ,KAAK,CAACK,MAFhB;AAGE,IAAA,OAAO,EAAEL,KAAK,CAACM,OAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAQE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAiBC,KAAK,iBACrB,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,KAAK,CAACC,SADb;AAEE,IAAA,IAAI,EAAED,KAAK,CAACE,IAFd;AAGE,IAAA,SAAS,EAAEF,KAAK,CAACG,SAHnB;AAIE,IAAA,QAAQ,EACNH,KAAK,CAACI,YAAN,GACK,GAAE1B,cAAe,GAAEC,WAAY,GAAEqB,KAAK,CAACI,YAAa,EADzD,GAEIjB,OAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CARF,CADF;AAyBD,CAjCD;;GAAMC,K;UACgBX,S,EAEqBS,a;;;KAHrCE,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n// Components\nimport BreadCrumb from './BreadCrumb';\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor';\n// Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong...</div>;\n\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MovieInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header='Actors'>\n        {movie.actors.map(actor => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}